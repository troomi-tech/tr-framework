@use 'sass:list';
@import './privateVariables.scss';

/*
  include a map in a class
*/
@mixin spread-map($map: ()) {
	@each $key, $value in $map {
		#{$key}: $value;
	}
}

/*
  Returns a CSS variable property specific to themeing.
  Accepts an optional fallback, and optional map.
  - SCSS: color: theme-var($--theme-primary, blue)
  - CSS:  color: var(--theme-primary, blue)
  Throws error if the variable not part of the map
*/
@function theme-var($key, $fallback: null, $map: $defaultTheme) {
	@if not map-has-key($map, $key) {
		@error "key: '#{$key}', is not a key in map: #{$map}";
	}
	@if ($fallback) {
		@return var($key, $fallback);
	} @else {
		@return var($key);
	}
}

/*
	Returns a SASS list of the string split by the separator.
 */
@function str-to-list($stringCandidate, $separator: ' ', $startAt: 1) {
	$workStr: str-slice('#{$stringCandidate}', $startAt);
	$list: ();
	$indexOfFirstSpace: str-index($workStr, $separator);
	@if $indexOfFirstSpace == null {
		$list: ($workStr);
	} @else {
		$list: (str-slice($workStr, 1, $indexOfFirstSpace - 1));
		$list: join($list, str-to-list($workStr, $startAt: $indexOfFirstSpace + 1));
	}
	@return $list;
}

/*
	Returns a selector that selects all adjacent siblings with the same selector if there are n total children.
	Example output for & = .parent .child, n = 7:
		.parent .child:first-child:nth-last-child(7),
		.parent .child:first-child:nth-last-child(7) ~ .child {
			@content;
		}
	The selector would select all children so long as there are 7 total children.

	Usage:
		.parent.tableRow {
			.child.tableCell {
				@include with-count(7) {
					width: calc(100% / 7);
				}
			}
		}
 */
@mixin with-count($n) {
	@if $n == 1 {
		&:first-child:nth-last-child(1) {
			@content;
		}
	} @else {
		&:first-child:nth-last-child(#{$n}),
		&:first-child:nth-last-child(#{$n}) ~ #{list.nth(str-to-list(&), -1)} {
			@content;
		}
	}
}
